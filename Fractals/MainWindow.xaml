<Window x:Class="Fractals.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:Fractals"
        mc:Ignorable="d"
        Title="" Height="750" Width="1200"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" WindowStartupLocation="CenterScreen" SnapsToDevicePixels="True" AllowsTransparency="False" BorderBrush="#FF2196F3" BorderThickness="1">
    <WindowChrome.WindowChrome>
        <WindowChrome
            ResizeBorderThickness="6"
            CornerRadius="2"
            GlassFrameThickness="0">
        </WindowChrome>
    </WindowChrome.WindowChrome>
    <Grid>
        <materialDesign:ColorZone Mode="PrimaryMid" Padding="12" Height="50" Margin="0,0,-0.4,0">
            <DockPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Margin="16 0 0 0">Fractals</TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button WindowChrome.IsHitTestVisibleInChrome="True" Style="{DynamicResource MaterialDesignToolButton}" HorizontalContentAlignment="Right" Height="25.6" Click="Reset_OnClick">
                        <materialDesign:PackIcon Kind="Refresh" HorizontalAlignment="Center" VerticalAlignment="Center" Width="22" Height="22" Margin="0" Foreground="White"/>
                    </Button>
                    <materialDesign:PopupBox WindowChrome.IsHitTestVisibleInChrome="True" DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" Margin="0,0,15,0">
                        <StackPanel>
                            <Button Click="popupDialog_OnClick">About</Button>
                        </StackPanel>
                    </materialDesign:PopupBox>
                    <Button WindowChrome.IsHitTestVisibleInChrome="True" Style="{DynamicResource MaterialDesignToolButton}" HorizontalContentAlignment="Right" Height="25.6" Click="Min_OnClick">
                        <materialDesign:PackIcon Kind="WindowMinimize" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16" Margin="0" Foreground="White"/>
                    </Button>
                    <Button WindowChrome.IsHitTestVisibleInChrome="True" Style="{DynamicResource MaterialDesignToolButton}" HorizontalContentAlignment="Right" Height="25.6" Click="MaxNormal_OnClick" Padding="10,0,0,0">
                        <materialDesign:PackIcon Kind="WindowMaximize" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16" Margin="0" Foreground="White"/>
                    </Button>
                    <Button WindowChrome.IsHitTestVisibleInChrome="True" Style="{DynamicResource MaterialDesignToolButton}" HorizontalContentAlignment="Right" Height="25.6" Click="Close_OnClick" Margin="10,0,0,0">
                        <materialDesign:PackIcon Kind="Close" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16" Margin="0" Foreground="White"/>
                    </Button>
                </StackPanel>
            </DockPanel>

        </materialDesign:ColorZone>
        <Grid Margin="0,50,0,0" Background="Black" HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="50.5"/>
            </Grid.ColumnDefinitions>
            <Grid Background="Black"
                  Grid.Row="0"
                  Grid.ColumnSpan="3"
                  Grid.RowSpan="2"
                  Margin="0,0,0,22.2"
                  x:Name="MandelContainer"
                  SizeChanged="MandelContainer_SizeChanged">
                <Grid.Effect>
                    <local:MandelbrotEffect x:Name="m"/>
                </Grid.Effect>
            </Grid>


            <TextBlock Grid.Row="1" Grid.Column="0" Text="Maximal iteration" Margin="2" Foreground="#DDFFFFFF" Padding="10,0,0,0" />
            <Slider x:Name="maxIter" Grid.Row="1" Grid.Column="1" Minimum="0" Maximum="250" Value="32" ValueChanged="maxIter_ValueChanged" Margin="10,0" TickPlacement="BottomRight" />
            <Label Grid.Row="1" Grid.Column="2" Content="{Binding ElementName=maxIter, Path=Value, UpdateSourceTrigger=PropertyChanged}" Padding="10,5"></Label>

            <TextBlock Grid.Row="2" Grid.Column="0" Text="Power (Real)" Margin="2" Foreground="#DDFFFFFF" Padding="10,0,0,0" />
            <Slider x:Name="powerReal" Grid.Row="2" Grid.Column="1" Minimum="0" Maximum="20" Value="2" ValueChanged="powerReal_ValueChanged" Margin="10,0" TickPlacement="BottomRight" />
            <Label Grid.Row="2" Grid.Column="2" Content="{Binding ElementName=powerReal, Path=Value, UpdateSourceTrigger=PropertyChanged}" Padding="10,5"></Label>

            <TextBlock Grid.Row="3" Grid.Column="0" Text="Power (Imaginary)" Margin="2" Foreground="#DDFFFFFF" Padding="10,0,0,0" />
            <Slider x:Name="powerImaginary" Grid.Row="3" Grid.Column="1" Minimum="0" Maximum="20" Value="0" ValueChanged="powerImaginary_ValueChanged" Margin="10,0" TickPlacement="BottomRight" />
            <Label Grid.Row="3" Grid.Column="2" Content="{Binding ElementName=powerImaginary, Path=Value, UpdateSourceTrigger=PropertyChanged}" Padding="10,5"></Label>

            <TextBlock Grid.Row="4" Grid.Column="0" Text="Bailout" Margin="2" Foreground="#DDFFFFFF" Padding="10,0,0,10" />
            <Slider x:Name="bailout" Grid.Row="4" Grid.Column="1" Minimum="0" Maximum="10" Value="4" ValueChanged="bailout_ValueChanged" Margin="10,0" BorderThickness="0,0,0,10" TickPlacement="BottomRight" />
            <Label Grid.Row="4" Grid.Column="2" Content="{Binding ElementName=bailout, Path=Value, UpdateSourceTrigger=PropertyChanged}" Padding="10,5"></Label>
        </Grid>
    </Grid>
</Window>

